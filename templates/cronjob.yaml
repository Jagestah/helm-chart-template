{{- if $.Values.deployment.cronjob }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ $.Values.name }}
  namespace: {{ $.Values.namespace }}
spec:
  concurrencyPolicy: {{ $.Values.deployment.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - args:
            - /bin/sh
            - -c
            - /host-manager
            image: {{ $.Values.deployment.image.name }}:{{ $.Values.deployment.image.tag }}
            imagePullPolicy: IfNotPresent
            name: {{ $.Values.name }}
            {{- if .resources }}
            resources:
{{toYaml .resources | indent 10 }}
            {{- end }}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: {{ $.Values.deployment.cronjob.restartPolicy }}
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
  schedule: {{ $.Values.deployment.cronjob.schedule }}
  startingDeadlineSeconds: 600
  successfulJobsHistoryLimit: 1
  suspend: false
{{- end }}
